name: Deploy to Google Cloud Platform

# Temporarily disabled for MVP development
# on:
#   push:
#     branches: [ main ]
#   workflow_run:
#     workflows: ["CI/CD Pipeline"]
#     types:
#       - completed

on:
  workflow_dispatch: # Only run manually for now

jobs:
  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Setup Google Cloud CLI
        if: ${{ secrets.GCP_SA_KEY != '' && secrets.GCP_PROJECT_ID != '' }}
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to Cloud Run
        if: ${{ secrets.GCP_SA_KEY != '' && secrets.GCP_PROJECT_ID != '' && secrets.GCP_REGION != '' }}
        run: |
          # Create Dockerfile for Cloud Run
          cat > Dockerfile << 'EOF'
          FROM nginx:alpine
          COPY dist/ /usr/share/nginx/html/
          COPY nginx.conf /etc/nginx/nginx.conf
          EXPOSE 8080
          CMD ["nginx", "-g", "daemon off;"]
          EOF

          # Create nginx config
          cat > nginx.conf << 'EOF'
          events {
            worker_connections 1024;
          }
          http {
            include /etc/nginx/mime.types;
            default_type application/octet-stream;
            sendfile on;
            keepalive_timeout 65;
            server {
              listen 8080;
              server_name localhost;
              root /usr/share/nginx/html;
              index index.html;
              location / {
                try_files $uri $uri/ /index.html;
              }
            }
          }
          EOF

          # Build and push container
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/doctai-app

          # Deploy to Cloud Run
          gcloud run deploy doctai-app \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/doctai-app \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars NODE_ENV=production

      - name: Skip GCP deployment (missing secrets)
        if: ${{ secrets.GCP_SA_KEY == '' || secrets.GCP_PROJECT_ID == '' || secrets.GCP_REGION == '' }}
        run: |
          echo "Skipping GCP deployment - missing required secrets"
          echo "This is expected during development. Set up GCP secrets to enable deployment."
          echo "Required secrets: GCP_SA_KEY, GCP_PROJECT_ID, GCP_REGION"
